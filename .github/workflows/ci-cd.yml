name: GeoSat Gateway CI/CD

permissions:
  contents: read
  security-events: write

on:
  push:
    branches: [ main, develop, 'copilot/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # ================================
  # Build & Test
  # ================================
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: 🔧 Build with Maven
        working-directory: ./geosat-gateway
        run: mvn clean verify -B

      - name: 📊 Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: geosat-gateway/target/surefire-reports/

      - name: 📈 Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: geosat-gateway/target/site/jacoco/

  # ================================
  # Code Quality
  # ================================
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: 🔍 Run Checkstyle
        working-directory: ./geosat-gateway
        run: mvn checkstyle:check || true

      - name: 🔒 Run Dependency Check
        working-directory: ./geosat-gateway
        run: mvn dependency:analyze || true

  # ================================
  # Docker Build
  # ================================
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Docker Hub (optional)
        if: false  # Habilitar quando configurar secrets
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏗️ Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: geosat-gateway:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ================================
  # Integration Tests
  # ================================
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build-and-test
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: 🧪 Run Integration Tests
        working-directory: ./geosat-gateway
        run: mvn verify -Pintegration-tests -B
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379

  # ================================
  # Security Scan
  # ================================
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔒 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './geosat-gateway'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: 📤 Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        with:
          sarif_file: 'trivy-results.sarif'

  # ================================
  # Deploy (Placeholder)
  # ================================
  deploy:
    name: Deploy to Environment
    runs-on: ubuntu-latest
    needs: [build-and-test, docker-build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: 🚀 Deploy Placeholder
        run: |
          echo "🎯 Deployment would happen here"
          echo "   - Build image with tag: ${{ github.sha }}"
          echo "   - Push to registry"
          echo "   - Update Kubernetes/ECS/etc"
